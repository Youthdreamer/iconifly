/* 基础样式 */
:root {
  --vp-c-brand: #646cff;
  --vp-c-brand-light: #747bff;
  --vp-c-brand-dark: #5954cc;
  /* 自定义卡片阴影 */
  --card-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

/* 针对主页标题的特殊间距调整 */
.vp-doc h1:nth-of-type(1) {
  margin-top: 60px 
}

/* 针对主页标题的特殊间距调整 */
.vp-doc h1:nth-of-type(2) {
  margin-top: 60px 
}


/* 为外观切换按钮添加中文文本 */
.VPNavBarAppearance::after {
  content: '主题';
  font-size: 14px;
  margin-left: 8px;
}

/* 移动设备上外观切换按钮的文本 */
.VPNavScreenAppearance .text {
  display: none !important;
}

.VPNavScreenAppearance::before {
  content: '外观';
  margin-right: 8px;
}

.VPSidebarItem .VPLink.active .link-text {
  /* color: var(--vp-c-brand) !important; */
  color: white !important;
  font-weight: 600;
}

.VPSidebarItem .VPLink.active {
  /* background-color: var(--vp-c-bg-soft); */
  background-color: var(--vp-c-brand);
  border-radius: 8px;
  padding: 8px 14px !important;
  margin: 0 -14px;
  position: relative;
  box-shadow: var(--card-shadow);
  /* border-left: 3px solid var(--vp-c-brand); */
  transition: all 0.3s ease;
}

.VPSidebarItem.is-active > .item > .VPLink {
  /* background-color: var(--vp-c-bg-soft); */
  background-color: var(--vp-c-brand);
  color: white !important;
  border-radius: 8px;
  padding: 8px 14px !important;
  margin: 0 -14px;
  position: relative;
  box-shadow: var(--card-shadow);
  /* border-left: 3px solid var(--vp-c-brand); */
}


/* 组件展示网格样式 */
.component-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(130px, 1fr));
  gap: 20px;
  margin-top: 20px;
}

.component-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 15px;
  border-radius: 8px;
  border: 1px solid var(--vp-c-divider);
  background-color: var(--vp-c-bg-soft);
  transition: transform 0.2s, box-shadow 0.2s;
}

.component-item:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.component-preview {
  width: 65px;
  height: 65px;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 10px;
}

.component-preview svg {
  max-width: 100%;
  max-height: 100%;
}

.component-name {
  font-size: 14px;
  text-align: center;
  font-weight: 500;
}

.VPSidebarItem.is-active > .item > .VPLink .text {
  color: white !important;
}

/* 深色模式下调整样式 */
.dark .VPSidebarItem .VPLink.active,
.dark .VPSidebarItem.is-active > .item > .VPLink {
  background-color: var(--vp-c-brand-dark);
}
  .tetris-button {
  display: inline-block;
  background: linear-gradient(145deg, #4c4cff, #00d1ff);
  border: 3px solid #00aaff;
  color: white;
  font-size: 1.2rem;
  font-weight: bold;
  padding: 10px 20px;
  text-align: center;
  text-decoration: none;
  border-radius: 8px;
  cursor: pointer;
  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.4), inset -2px -2px 4px rgba(255, 255, 255, 0.2);
  transition: transform 0.2s, box-shadow 0.2s;
}

.tetris-button:hover {
  transform: scale(1.05);
  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.6), inset -2px -2px 8px rgba(255, 255, 255, 0.4);
}

.tetris-button:active {
  transform: scale(0.95);
  box-shadow: inset 2px 2px 5px rgba(0, 0, 0, 0.5);
}

.tetris-button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  background: radial-gradient(circle, #1a1a2e, #0f3460, #16213e);
  color: #00d4ff;
  font-size: 1.6rem;
  font-weight: bold;
  text-decoration: none;
  padding: 16px 32px;
  text-align: center;
  text-decoration: none;
  border-radius: 16px;
  border: 2px solid #00d4ff;
  position: relative;
  cursor: pointer;
  overflow: hidden;
  transition: transform 0.4s ease, box-shadow 0.4s ease, background 0.4s ease;
  box-shadow: 0 10px 20px rgba(0, 212, 255, 0.2),
    inset 0 2px 8px rgba(0, 212, 255, 0.3);
}

.tetris-button::before {
  content: '';
  position: absolute;
  top: -150%;
  left: -150%;
  width: 400%;
  height: 400%;
  background: conic-gradient(
    from 0deg,
    #00d4ff,
    rgba(0, 255, 204, 0.5),
    #0ff,
    rgba(0, 255, 204, 0.5),
    #00d4ff
  );
  border-radius: 50%;
  animation: tetris-glow 4s linear infinite;
  opacity: 0.3;
  transition: opacity 0.3s ease;
}

.tetris-button:hover::before {
  opacity: 0.6;
  animation: tetris-glow 2s linear infinite;
}

.tetris-button:hover {
  transform: scale(1.1);
  box-shadow: 0 15px 30px rgba(0, 212, 255, 0.4),
    inset 0 4px 12px rgba(0, 212, 255, 0.3);
}

.tetris-button span {
  position: relative;
  z-index: 1;
  text-shadow: 0 0 8px #00d4ff, 0 0 16px rgba(0, 212, 255, 0.7);
}

.tetris-button:active {
  transform: scale(0.95);
  box-shadow: inset 0 6px 12px rgba(0, 0, 0, 0.4);
}

@keyframes tetris-glow {
  0% {
    transform: translate(-50%, -50%) rotate(0deg);
  }
  100% {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}

@keyframes text-flicker {
  0%,
  19%,
  21%,
  23%,
  25%,
  54%,
  56%,
  100% {
    opacity: 1;
  }
  20%,
  24%,
  55% {
    opacity: 0;
  }
}


